// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: internal/conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Bootstrap represents the application configuration
type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`     // Server configuration
	Data          *Data                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`         // Data layer configuration
	Registry      *Registry              `protobuf:"bytes,3,opt,name=registry,proto3" json:"registry,omitempty"` // Registry configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_internal_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

// Server contains server-related configuration
type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"` // HTTP server configuration
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"` // gRPC server configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_internal_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// Data contains data layer configuration
type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"` // Database configuration
	Redis         *Data_Redis            `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`       // Redis configuration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_internal_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

// Registry contains service registry configuration
type Registry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Registry type (local, etcd, consul, nacos, kubernetes)
	// Local file-based registry configuration
	Local *LocalRegistry `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	// Etcd registry configuration
	Etcd *EtcdRegistry `protobuf:"bytes,3,opt,name=etcd,proto3" json:"etcd,omitempty"`
	// Consul registry configuration
	Consul *ConsulRegistry `protobuf:"bytes,4,opt,name=consul,proto3" json:"consul,omitempty"`
	// Nacos registry configuration
	Nacos *NacosRegistry `protobuf:"bytes,5,opt,name=nacos,proto3" json:"nacos,omitempty"`
	// Kubernetes registry configuration
	Kubernetes    *KubernetesRegistry `protobuf:"bytes,6,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_internal_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Registry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Registry) GetLocal() *LocalRegistry {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Registry) GetEtcd() *EtcdRegistry {
	if x != nil {
		return x.Etcd
	}
	return nil
}

func (x *Registry) GetConsul() *ConsulRegistry {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *Registry) GetNacos() *NacosRegistry {
	if x != nil {
		return x.Nacos
	}
	return nil
}

func (x *Registry) GetKubernetes() *KubernetesRegistry {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

// LocalRegistry represents local file-based registry configuration
type LocalRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                // Path to the registry file
	WatchInterval *durationpb.Duration   `protobuf:"bytes,2,opt,name=watch_interval,json=watchInterval,proto3" json:"watch_interval,omitempty"` // File watch interval
	AutoCreate    bool                   `protobuf:"varint,3,opt,name=auto_create,json=autoCreate,proto3" json:"auto_create,omitempty"`         // Auto create file if not exists
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalRegistry) Reset() {
	*x = LocalRegistry{}
	mi := &file_internal_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRegistry) ProtoMessage() {}

func (x *LocalRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRegistry.ProtoReflect.Descriptor instead.
func (*LocalRegistry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *LocalRegistry) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *LocalRegistry) GetWatchInterval() *durationpb.Duration {
	if x != nil {
		return x.WatchInterval
	}
	return nil
}

func (x *LocalRegistry) GetAutoCreate() bool {
	if x != nil {
		return x.AutoCreate
	}
	return false
}

// EtcdRegistry represents etcd registry configuration
type EtcdRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`                        // Etcd server endpoints
	DialTimeout   *durationpb.Duration   `protobuf:"bytes,2,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"` // Connection timeout
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                          // "Username for authentication"
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                          // "Password for authentication"
	Namespace     string                 `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`                        // "Namespace prefix for keys"
	LeaseTtl      *durationpb.Duration   `protobuf:"bytes,6,opt,name=lease_ttl,json=leaseTtl,proto3" json:"lease_ttl,omitempty"`          // Lease TTL for service registration
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdRegistry) Reset() {
	*x = EtcdRegistry{}
	mi := &file_internal_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdRegistry) ProtoMessage() {}

func (x *EtcdRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdRegistry.ProtoReflect.Descriptor instead.
func (*EtcdRegistry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *EtcdRegistry) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EtcdRegistry) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

func (x *EtcdRegistry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EtcdRegistry) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EtcdRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EtcdRegistry) GetLeaseTtl() *durationpb.Duration {
	if x != nil {
		return x.LeaseTtl
	}
	return nil
}

// ConsulRegistry represents consul registry configuration
type ConsulRegistry struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	Address                            string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                                                                                        // Consul server address
	Scheme                             string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`                                                                                                          // HTTP scheme (http, https)
	Datacenter                         string                 `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`                                                                                                  // "Consul datacenter"
	Token                              string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                                                                                            // "Consul ACL token"
	Namespace                          string                 `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                                                    // "Consul namespace"
	HealthCheckInterval                *durationpb.Duration   `protobuf:"bytes,6,opt,name=health_check_interval,json=healthCheckInterval,proto3" json:"health_check_interval,omitempty"`                                                   // Health check interval
	HealthCheckTimeout                 *durationpb.Duration   `protobuf:"bytes,7,opt,name=health_check_timeout,json=healthCheckTimeout,proto3" json:"health_check_timeout,omitempty"`                                                      // Health check timeout
	HealthCheckDeregisterCriticalAfter bool                   `protobuf:"varint,8,opt,name=health_check_deregister_critical_after,json=healthCheckDeregisterCriticalAfter,proto3" json:"health_check_deregister_critical_after,omitempty"` // Deregister after critical
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ConsulRegistry) Reset() {
	*x = ConsulRegistry{}
	mi := &file_internal_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsulRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsulRegistry) ProtoMessage() {}

func (x *ConsulRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsulRegistry.ProtoReflect.Descriptor instead.
func (*ConsulRegistry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *ConsulRegistry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConsulRegistry) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *ConsulRegistry) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *ConsulRegistry) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConsulRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConsulRegistry) GetHealthCheckInterval() *durationpb.Duration {
	if x != nil {
		return x.HealthCheckInterval
	}
	return nil
}

func (x *ConsulRegistry) GetHealthCheckTimeout() *durationpb.Duration {
	if x != nil {
		return x.HealthCheckTimeout
	}
	return nil
}

func (x *ConsulRegistry) GetHealthCheckDeregisterCriticalAfter() bool {
	if x != nil {
		return x.HealthCheckDeregisterCriticalAfter
	}
	return false
}

// NacosRegistry represents nacos registry configuration
type NacosRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerConfigs []*NacosServerConfig   `protobuf:"bytes,1,rep,name=server_configs,json=serverConfigs,proto3" json:"server_configs,omitempty"` // Nacos server configurations
	ClientConfig  *NacosClientConfig     `protobuf:"bytes,2,opt,name=client_config,json=clientConfig,proto3" json:"client_config,omitempty"`    // Nacos client configuration
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`                                      // "Service group"
	Cluster       string                 `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`                                  // "Service cluster"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosRegistry) Reset() {
	*x = NacosRegistry{}
	mi := &file_internal_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosRegistry) ProtoMessage() {}

func (x *NacosRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosRegistry.ProtoReflect.Descriptor instead.
func (*NacosRegistry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *NacosRegistry) GetServerConfigs() []*NacosServerConfig {
	if x != nil {
		return x.ServerConfigs
	}
	return nil
}

func (x *NacosRegistry) GetClientConfig() *NacosClientConfig {
	if x != nil {
		return x.ClientConfig
	}
	return nil
}

func (x *NacosRegistry) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NacosRegistry) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

// NacosServerConfig represents nacos server configuration
type NacosServerConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpAddr        string                 `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`                // "Nacos server IP address"
	Port          uint64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                 // Nacos server port
	ContextPath   string                 `protobuf:"bytes,3,opt,name=context_path,json=contextPath,proto3" json:"context_path,omitempty"` // "Nacos server context path"
	Scheme        string                 `protobuf:"bytes,4,opt,name=scheme,proto3" json:"scheme,omitempty"`                              // HTTP scheme (http, https)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosServerConfig) Reset() {
	*x = NacosServerConfig{}
	mi := &file_internal_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosServerConfig) ProtoMessage() {}

func (x *NacosServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosServerConfig.ProtoReflect.Descriptor instead.
func (*NacosServerConfig) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *NacosServerConfig) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *NacosServerConfig) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NacosServerConfig) GetContextPath() string {
	if x != nil {
		return x.ContextPath
	}
	return ""
}

func (x *NacosServerConfig) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

// NacosClientConfig represents nacos client configuration
type NacosClientConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`    // "Nacos namespace ID"
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                             // "Username for authentication"
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                             // "Password for authentication"
	LogLevel      string                 `protobuf:"bytes,4,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`             // "Log level (debug, info, warn, error)"
	LogDir        string                 `protobuf:"bytes,5,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`                   // "Log directory path"
	CacheDir      string                 `protobuf:"bytes,6,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`             // "Cache directory path"
	TimeoutMs     *durationpb.Duration   `protobuf:"bytes,7,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`          // Request timeout
	BeatInterval  *durationpb.Duration   `protobuf:"bytes,8,opt,name=beat_interval,json=beatInterval,proto3" json:"beat_interval,omitempty"` // Heartbeat interval
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosClientConfig) Reset() {
	*x = NacosClientConfig{}
	mi := &file_internal_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosClientConfig) ProtoMessage() {}

func (x *NacosClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosClientConfig.ProtoReflect.Descriptor instead.
func (*NacosClientConfig) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *NacosClientConfig) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *NacosClientConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *NacosClientConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *NacosClientConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *NacosClientConfig) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *NacosClientConfig) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *NacosClientConfig) GetTimeoutMs() *durationpb.Duration {
	if x != nil {
		return x.TimeoutMs
	}
	return nil
}

func (x *NacosClientConfig) GetBeatInterval() *durationpb.Duration {
	if x != nil {
		return x.BeatInterval
	}
	return nil
}

// KubernetesRegistry represents kubernetes registry configuration
type KubernetesRegistry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                              // "Kubernetes namespace"
	KubeConfig    string                 `protobuf:"bytes,2,opt,name=kube_config,json=kubeConfig,proto3" json:"kube_config,omitempty"`          // "Path to kubeconfig file"
	InCluster     bool                   `protobuf:"varint,3,opt,name=in_cluster,json=inCluster,proto3" json:"in_cluster,omitempty"`            // Use in-cluster configuration
	LabelSelector string                 `protobuf:"bytes,4,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"` // "Label selector for service discovery"
	FieldSelector string                 `protobuf:"bytes,5,opt,name=field_selector,json=fieldSelector,proto3" json:"field_selector,omitempty"` // "Field selector for service discovery"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesRegistry) Reset() {
	*x = KubernetesRegistry{}
	mi := &file_internal_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesRegistry) ProtoMessage() {}

func (x *KubernetesRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesRegistry.ProtoReflect.Descriptor instead.
func (*KubernetesRegistry) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *KubernetesRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesRegistry) GetKubeConfig() string {
	if x != nil {
		return x.KubeConfig
	}
	return ""
}

func (x *KubernetesRegistry) GetInCluster() bool {
	if x != nil {
		return x.InCluster
	}
	return false
}

func (x *KubernetesRegistry) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

func (x *KubernetesRegistry) GetFieldSelector() string {
	if x != nil {
		return x.FieldSelector
	}
	return ""
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Network type (tcp, tcp4, tcp6, unix, unixpacket)
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       // Listen address
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"` // Request timeout
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_internal_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // Network type (tcp, tcp4, tcp6, unix, unixpacket)
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       // Listen address
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"` // Request timeout
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_internal_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"` // Database driver (mysql, postgres, sqlite3)
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` // Database connection string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_internal_conf_conf_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`                               // Network type (tcp, unix)
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`                                     // Redis server address
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                             // Redis password
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`                                        // Redis database number
	DialTimeout   *durationpb.Duration   `protobuf:"bytes,5,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`    // Connection timeout
	ReadTimeout   *durationpb.Duration   `protobuf:"bytes,6,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`    // Read timeout
	WriteTimeout  *durationpb.Duration   `protobuf:"bytes,7,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"` // Write timeout
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_internal_conf_conf_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

var File_internal_conf_conf_proto protoreflect.FileDescriptor

const file_internal_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x18internal/conf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\x8f\x01\n" +
	"\tBootstrap\x12*\n" +
	"\x06server\x18\x01 \x01(\v2\x12.kratos.api.ServerR\x06server\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.kratos.api.DataR\x04data\x120\n" +
	"\bregistry\x18\x03 \x01(\v2\x14.kratos.api.RegistryR\bregistry\"\xb8\x02\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x1ai\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1ai\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\xc7\x03\n" +
	"\x04Data\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.kratos.api.Data.DatabaseR\bdatabase\x12,\n" +
	"\x05redis\x18\x02 \x01(\v2\x16.kratos.api.Data.RedisR\x05redis\x1a:\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x1a\x9d\x02\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x12<\n" +
	"\fdial_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\vdialTimeout\x12<\n" +
	"\fread_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\"\xa2\x02\n" +
	"\bRegistry\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12/\n" +
	"\x05local\x18\x02 \x01(\v2\x19.kratos.api.LocalRegistryR\x05local\x12,\n" +
	"\x04etcd\x18\x03 \x01(\v2\x18.kratos.api.EtcdRegistryR\x04etcd\x122\n" +
	"\x06consul\x18\x04 \x01(\v2\x1a.kratos.api.ConsulRegistryR\x06consul\x12/\n" +
	"\x05nacos\x18\x05 \x01(\v2\x19.kratos.api.NacosRegistryR\x05nacos\x12>\n" +
	"\n" +
	"kubernetes\x18\x06 \x01(\v2\x1e.kratos.api.KubernetesRegistryR\n" +
	"kubernetes\"\x8f\x01\n" +
	"\rLocalRegistry\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12@\n" +
	"\x0ewatch_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\rwatchInterval\x12\x1f\n" +
	"\vauto_create\x18\x03 \x01(\bR\n" +
	"autoCreate\"\xf8\x01\n" +
	"\fEtcdRegistry\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12<\n" +
	"\fdial_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\vdialTimeout\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x126\n" +
	"\tlease_ttl\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\bleaseTtl\"\x86\x03\n" +
	"\x0eConsulRegistry\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x03 \x01(\tR\n" +
	"datacenter\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12M\n" +
	"\x15health_check_interval\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x13healthCheckInterval\x12K\n" +
	"\x14health_check_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x12healthCheckTimeout\x12R\n" +
	"&health_check_deregister_critical_after\x18\b \x01(\bR\"healthCheckDeregisterCriticalAfter\"\xc9\x01\n" +
	"\rNacosRegistry\x12D\n" +
	"\x0eserver_configs\x18\x01 \x03(\v2\x1d.kratos.api.NacosServerConfigR\rserverConfigs\x12B\n" +
	"\rclient_config\x18\x02 \x01(\v2\x1d.kratos.api.NacosClientConfigR\fclientConfig\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x18\n" +
	"\acluster\x18\x04 \x01(\tR\acluster\"{\n" +
	"\x11NacosServerConfig\x12\x17\n" +
	"\aip_addr\x18\x01 \x01(\tR\x06ipAddr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12!\n" +
	"\fcontext_path\x18\x03 \x01(\tR\vcontextPath\x12\x16\n" +
	"\x06scheme\x18\x04 \x01(\tR\x06scheme\"\xbb\x02\n" +
	"\x11NacosClientConfig\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\tlog_level\x18\x04 \x01(\tR\blogLevel\x12\x17\n" +
	"\alog_dir\x18\x05 \x01(\tR\x06logDir\x12\x1b\n" +
	"\tcache_dir\x18\x06 \x01(\tR\bcacheDir\x128\n" +
	"\n" +
	"timeout_ms\x18\a \x01(\v2\x19.google.protobuf.DurationR\ttimeoutMs\x12>\n" +
	"\rbeat_interval\x18\b \x01(\v2\x19.google.protobuf.DurationR\fbeatInterval\"\xc0\x01\n" +
	"\x12KubernetesRegistry\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vkube_config\x18\x02 \x01(\tR\n" +
	"kubeConfig\x12\x1d\n" +
	"\n" +
	"in_cluster\x18\x03 \x01(\bR\tinCluster\x12%\n" +
	"\x0elabel_selector\x18\x04 \x01(\tR\rlabelSelector\x12%\n" +
	"\x0efield_selector\x18\x05 \x01(\tR\rfieldSelectorBEZCgithub.com/cocosip/zero/contrib/registry/example/internal/conf;confb\x06proto3"

var (
	file_internal_conf_conf_proto_rawDescOnce sync.Once
	file_internal_conf_conf_proto_rawDescData []byte
)

func file_internal_conf_conf_proto_rawDescGZIP() []byte {
	file_internal_conf_conf_proto_rawDescOnce.Do(func() {
		file_internal_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_conf_conf_proto_rawDesc), len(file_internal_conf_conf_proto_rawDesc)))
	})
	return file_internal_conf_conf_proto_rawDescData
}

var file_internal_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_internal_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),           // 0: kratos.api.Bootstrap
	(*Server)(nil),              // 1: kratos.api.Server
	(*Data)(nil),                // 2: kratos.api.Data
	(*Registry)(nil),            // 3: kratos.api.Registry
	(*LocalRegistry)(nil),       // 4: kratos.api.LocalRegistry
	(*EtcdRegistry)(nil),        // 5: kratos.api.EtcdRegistry
	(*ConsulRegistry)(nil),      // 6: kratos.api.ConsulRegistry
	(*NacosRegistry)(nil),       // 7: kratos.api.NacosRegistry
	(*NacosServerConfig)(nil),   // 8: kratos.api.NacosServerConfig
	(*NacosClientConfig)(nil),   // 9: kratos.api.NacosClientConfig
	(*KubernetesRegistry)(nil),  // 10: kratos.api.KubernetesRegistry
	(*Server_HTTP)(nil),         // 11: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 12: kratos.api.Server.GRPC
	(*Data_Database)(nil),       // 13: kratos.api.Data.Database
	(*Data_Redis)(nil),          // 14: kratos.api.Data.Redis
	(*durationpb.Duration)(nil), // 15: google.protobuf.Duration
}
var file_internal_conf_conf_proto_depIdxs = []int32{
	1,  // 0: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	2,  // 1: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	3,  // 2: kratos.api.Bootstrap.registry:type_name -> kratos.api.Registry
	11, // 3: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	12, // 4: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	13, // 5: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	14, // 6: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	4,  // 7: kratos.api.Registry.local:type_name -> kratos.api.LocalRegistry
	5,  // 8: kratos.api.Registry.etcd:type_name -> kratos.api.EtcdRegistry
	6,  // 9: kratos.api.Registry.consul:type_name -> kratos.api.ConsulRegistry
	7,  // 10: kratos.api.Registry.nacos:type_name -> kratos.api.NacosRegistry
	10, // 11: kratos.api.Registry.kubernetes:type_name -> kratos.api.KubernetesRegistry
	15, // 12: kratos.api.LocalRegistry.watch_interval:type_name -> google.protobuf.Duration
	15, // 13: kratos.api.EtcdRegistry.dial_timeout:type_name -> google.protobuf.Duration
	15, // 14: kratos.api.EtcdRegistry.lease_ttl:type_name -> google.protobuf.Duration
	15, // 15: kratos.api.ConsulRegistry.health_check_interval:type_name -> google.protobuf.Duration
	15, // 16: kratos.api.ConsulRegistry.health_check_timeout:type_name -> google.protobuf.Duration
	8,  // 17: kratos.api.NacosRegistry.server_configs:type_name -> kratos.api.NacosServerConfig
	9,  // 18: kratos.api.NacosRegistry.client_config:type_name -> kratos.api.NacosClientConfig
	15, // 19: kratos.api.NacosClientConfig.timeout_ms:type_name -> google.protobuf.Duration
	15, // 20: kratos.api.NacosClientConfig.beat_interval:type_name -> google.protobuf.Duration
	15, // 21: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	15, // 22: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	15, // 23: kratos.api.Data.Redis.dial_timeout:type_name -> google.protobuf.Duration
	15, // 24: kratos.api.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	15, // 25: kratos.api.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_internal_conf_conf_proto_init() }
func file_internal_conf_conf_proto_init() {
	if File_internal_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_conf_conf_proto_rawDesc), len(file_internal_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_conf_conf_proto_goTypes,
		DependencyIndexes: file_internal_conf_conf_proto_depIdxs,
		MessageInfos:      file_internal_conf_conf_proto_msgTypes,
	}.Build()
	File_internal_conf_conf_proto = out.File
	file_internal_conf_conf_proto_goTypes = nil
	file_internal_conf_conf_proto_depIdxs = nil
}
