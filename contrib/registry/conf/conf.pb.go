// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Registry represents the registry configuration
// It supports multiple registry types with their specific configurations
type Registry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Registry type to use (local, etcd, consul, nacos, kubernetes)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Local registry configuration
	Local *LocalRegistry `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	// Etcd registry configuration
	Etcd *EtcdRegistry `protobuf:"bytes,3,opt,name=etcd,proto3" json:"etcd,omitempty"`
	// Consul registry configuration
	Consul *ConsulRegistry `protobuf:"bytes,4,opt,name=consul,proto3" json:"consul,omitempty"`
	// Nacos registry configuration
	Nacos *NacosRegistry `protobuf:"bytes,5,opt,name=nacos,proto3" json:"nacos,omitempty"`
	// Kubernetes registry configuration
	Kubernetes    *KubernetesRegistry `protobuf:"bytes,6,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Registry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Registry) GetLocal() *LocalRegistry {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Registry) GetEtcd() *EtcdRegistry {
	if x != nil {
		return x.Etcd
	}
	return nil
}

func (x *Registry) GetConsul() *ConsulRegistry {
	if x != nil {
		return x.Consul
	}
	return nil
}

func (x *Registry) GetNacos() *NacosRegistry {
	if x != nil {
		return x.Nacos
	}
	return nil
}

func (x *Registry) GetKubernetes() *KubernetesRegistry {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

// LocalRegistry represents local file registry configuration
type LocalRegistry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to the registry file
	FilePath      string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalRegistry) Reset() {
	*x = LocalRegistry{}
	mi := &file_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRegistry) ProtoMessage() {}

func (x *LocalRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRegistry.ProtoReflect.Descriptor instead.
func (*LocalRegistry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *LocalRegistry) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// EtcdRegistry represents etcd registry configuration
type EtcdRegistry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Etcd endpoints
	Endpoints []string `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Connection timeout
	DialTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	// Username for authentication
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// Password for authentication
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Etcd namespace
	Namespace     string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcdRegistry) Reset() {
	*x = EtcdRegistry{}
	mi := &file_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcdRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdRegistry) ProtoMessage() {}

func (x *EtcdRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdRegistry.ProtoReflect.Descriptor instead.
func (*EtcdRegistry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *EtcdRegistry) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EtcdRegistry) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

func (x *EtcdRegistry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EtcdRegistry) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EtcdRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// ConsulRegistry represents consul registry configuration
type ConsulRegistry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Consul server address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// HTTP or HTTPS
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// Consul datacenter
	Datacenter string `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	// Consul ACL token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// Consul namespace
	Namespace     string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsulRegistry) Reset() {
	*x = ConsulRegistry{}
	mi := &file_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsulRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsulRegistry) ProtoMessage() {}

func (x *ConsulRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsulRegistry.ProtoReflect.Descriptor instead.
func (*ConsulRegistry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *ConsulRegistry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConsulRegistry) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *ConsulRegistry) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *ConsulRegistry) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConsulRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// NacosRegistry represents nacos registry configuration
type NacosRegistry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Nacos server configurations
	ServerConfigs []*NacosServerConfig `protobuf:"bytes,1,rep,name=server_configs,json=serverConfigs,proto3" json:"server_configs,omitempty"`
	// Nacos client configuration
	ClientConfig *NacosClientConfig `protobuf:"bytes,2,opt,name=client_config,json=clientConfig,proto3" json:"client_config,omitempty"`
	// Service group
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	// Service cluster
	Cluster       string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosRegistry) Reset() {
	*x = NacosRegistry{}
	mi := &file_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosRegistry) ProtoMessage() {}

func (x *NacosRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosRegistry.ProtoReflect.Descriptor instead.
func (*NacosRegistry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *NacosRegistry) GetServerConfigs() []*NacosServerConfig {
	if x != nil {
		return x.ServerConfigs
	}
	return nil
}

func (x *NacosRegistry) GetClientConfig() *NacosClientConfig {
	if x != nil {
		return x.ClientConfig
	}
	return nil
}

func (x *NacosRegistry) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NacosRegistry) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

// NacosServerConfig represents nacos server configuration
type NacosServerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server IP address
	IpAddr string `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	// Server port
	Port uint64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Context path
	ContextPath   string `protobuf:"bytes,3,opt,name=context_path,json=contextPath,proto3" json:"context_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosServerConfig) Reset() {
	*x = NacosServerConfig{}
	mi := &file_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosServerConfig) ProtoMessage() {}

func (x *NacosServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosServerConfig.ProtoReflect.Descriptor instead.
func (*NacosServerConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *NacosServerConfig) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *NacosServerConfig) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NacosServerConfig) GetContextPath() string {
	if x != nil {
		return x.ContextPath
	}
	return ""
}

// NacosClientConfig represents nacos client configuration
type NacosClientConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace ID
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Username
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Password
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// Log level
	LogLevel string `protobuf:"bytes,4,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	// Log directory
	LogDir string `protobuf:"bytes,5,opt,name=log_dir,json=logDir,proto3" json:"log_dir,omitempty"`
	// Cache directory
	CacheDir      string `protobuf:"bytes,6,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NacosClientConfig) Reset() {
	*x = NacosClientConfig{}
	mi := &file_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NacosClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NacosClientConfig) ProtoMessage() {}

func (x *NacosClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NacosClientConfig.ProtoReflect.Descriptor instead.
func (*NacosClientConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *NacosClientConfig) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *NacosClientConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *NacosClientConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *NacosClientConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *NacosClientConfig) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

func (x *NacosClientConfig) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

// KubernetesRegistry represents kubernetes registry configuration
type KubernetesRegistry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kubernetes namespace
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Path to kubeconfig file
	KubeConfig string `protobuf:"bytes,2,opt,name=kube_config,json=kubeConfig,proto3" json:"kube_config,omitempty"`
	// Whether running in cluster
	InCluster bool `protobuf:"varint,3,opt,name=in_cluster,json=inCluster,proto3" json:"in_cluster,omitempty"`
	// Label selector for services
	LabelSelector string `protobuf:"bytes,4,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesRegistry) Reset() {
	*x = KubernetesRegistry{}
	mi := &file_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesRegistry) ProtoMessage() {}

func (x *KubernetesRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesRegistry.ProtoReflect.Descriptor instead.
func (*KubernetesRegistry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *KubernetesRegistry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesRegistry) GetKubeConfig() string {
	if x != nil {
		return x.KubeConfig
	}
	return ""
}

func (x *KubernetesRegistry) GetInCluster() bool {
	if x != nil {
		return x.InCluster
	}
	return false
}

func (x *KubernetesRegistry) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

var File_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x0fconf/conf.proto\x12\x17kratos.contrib.registry\x1a\x1egoogle/protobuf/duration.proto\"\xe3\x02\n" +
	"\bRegistry\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12<\n" +
	"\x05local\x18\x02 \x01(\v2&.kratos.contrib.registry.LocalRegistryR\x05local\x129\n" +
	"\x04etcd\x18\x03 \x01(\v2%.kratos.contrib.registry.EtcdRegistryR\x04etcd\x12?\n" +
	"\x06consul\x18\x04 \x01(\v2'.kratos.contrib.registry.ConsulRegistryR\x06consul\x12<\n" +
	"\x05nacos\x18\x05 \x01(\v2&.kratos.contrib.registry.NacosRegistryR\x05nacos\x12K\n" +
	"\n" +
	"kubernetes\x18\x06 \x01(\v2+.kratos.contrib.registry.KubernetesRegistryR\n" +
	"kubernetes\",\n" +
	"\rLocalRegistry\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\"\xc0\x01\n" +
	"\fEtcdRegistry\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12<\n" +
	"\fdial_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\vdialTimeout\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\"\x96\x01\n" +
	"\x0eConsulRegistry\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x03 \x01(\tR\n" +
	"datacenter\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\"\xe3\x01\n" +
	"\rNacosRegistry\x12Q\n" +
	"\x0eserver_configs\x18\x01 \x03(\v2*.kratos.contrib.registry.NacosServerConfigR\rserverConfigs\x12O\n" +
	"\rclient_config\x18\x02 \x01(\v2*.kratos.contrib.registry.NacosClientConfigR\fclientConfig\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x18\n" +
	"\acluster\x18\x04 \x01(\tR\acluster\"c\n" +
	"\x11NacosServerConfig\x12\x17\n" +
	"\aip_addr\x18\x01 \x01(\tR\x06ipAddr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12!\n" +
	"\fcontext_path\x18\x03 \x01(\tR\vcontextPath\"\xc1\x01\n" +
	"\x11NacosClientConfig\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\tlog_level\x18\x04 \x01(\tR\blogLevel\x12\x17\n" +
	"\alog_dir\x18\x05 \x01(\tR\x06logDir\x12\x1b\n" +
	"\tcache_dir\x18\x06 \x01(\tR\bcacheDir\"\x99\x01\n" +
	"\x12KubernetesRegistry\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vkube_config\x18\x02 \x01(\tR\n" +
	"kubeConfig\x12\x1d\n" +
	"\n" +
	"in_cluster\x18\x03 \x01(\bR\tinCluster\x12%\n" +
	"\x0elabel_selector\x18\x04 \x01(\tR\rlabelSelectorB4Z2github.com/cocosip/zero/contrib/registry/conf;confb\x06proto3"

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_conf_conf_proto_goTypes = []any{
	(*Registry)(nil),            // 0: kratos.contrib.registry.Registry
	(*LocalRegistry)(nil),       // 1: kratos.contrib.registry.LocalRegistry
	(*EtcdRegistry)(nil),        // 2: kratos.contrib.registry.EtcdRegistry
	(*ConsulRegistry)(nil),      // 3: kratos.contrib.registry.ConsulRegistry
	(*NacosRegistry)(nil),       // 4: kratos.contrib.registry.NacosRegistry
	(*NacosServerConfig)(nil),   // 5: kratos.contrib.registry.NacosServerConfig
	(*NacosClientConfig)(nil),   // 6: kratos.contrib.registry.NacosClientConfig
	(*KubernetesRegistry)(nil),  // 7: kratos.contrib.registry.KubernetesRegistry
	(*durationpb.Duration)(nil), // 8: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	1, // 0: kratos.contrib.registry.Registry.local:type_name -> kratos.contrib.registry.LocalRegistry
	2, // 1: kratos.contrib.registry.Registry.etcd:type_name -> kratos.contrib.registry.EtcdRegistry
	3, // 2: kratos.contrib.registry.Registry.consul:type_name -> kratos.contrib.registry.ConsulRegistry
	4, // 3: kratos.contrib.registry.Registry.nacos:type_name -> kratos.contrib.registry.NacosRegistry
	7, // 4: kratos.contrib.registry.Registry.kubernetes:type_name -> kratos.contrib.registry.KubernetesRegistry
	8, // 5: kratos.contrib.registry.EtcdRegistry.dial_timeout:type_name -> google.protobuf.Duration
	5, // 6: kratos.contrib.registry.NacosRegistry.server_configs:type_name -> kratos.contrib.registry.NacosServerConfig
	6, // 7: kratos.contrib.registry.NacosRegistry.client_config:type_name -> kratos.contrib.registry.NacosClientConfig
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
